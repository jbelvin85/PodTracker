services:
  db:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001" # Expose backend on 3001
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: development # Run in development mode
      PORT: ${BACKEND_PORT}
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${VITE_FRONTEND_PORT}:${VITE_FRONTEND_PORT}"
    depends_on:
      - backend
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend/public:/app/public
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/postcss.config.js:/app/postcss.config.js
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
    command: npm run dev

  nginx:
    image: nginx:alpine
    ports:
      - "${APP_PORT:-8000}:80" # Listen on APP_PORT (default 8000) to avoid conflicts
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  db-data:
