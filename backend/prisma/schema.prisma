// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  email       String   @unique
  username    String   @unique
  password    String   // Hashed password
  displayName String?
  bio         String?
  avatarUrl   String?

  // Relations
  ownedPods Pod[]    @relation("PodOwner")
  pods      Pod[]    @relation("PodMembers")
  decks     Deck[]
  games     Game[]   @relation("GamePlayers")
  wonGames  Game[]   @relation("GameWinner")
}

model Pod {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String

  // Relations
  ownerId   String
  owner     User     @relation("PodOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  members   User[]   @relation("PodMembers")
  decks     Deck[]   @relation("PodDecks")
  games     Game[]
}

model Deck {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  commander   String
  description String?

  // Relations
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  pods        Pod[]    @relation("PodDecks")
}

model Game {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  startTime DateTime
  endTime   DateTime?

  // Relations
  podId     String
  pod       Pod      @relation(fields: [podId], references: [id], onDelete: Cascade)
  players   User[]   @relation("GamePlayers")
  winnerId  String?
  winner    User?    @relation("GameWinner", fields: [winnerId], references: [id])
}