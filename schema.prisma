// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  decks     Deck[]
  pods      PodsOnUsers[]
  games     Game[] // A user can be in multiple games
}

model Pod {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members   PodsOnUsers[]
  games     Game[]
}

model PodsOnUsers {
  pod       Pod      @relation(fields: [podId], references: [id])
  podId     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  assignedAt DateTime @default(now())

  @@id([podId, userId])
}

model Deck {
  id        String   @id @default(cuid())
  name      String
  commander String?
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
}

model Game {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  startTime   DateTime  @default(now())
  endTime     DateTime?
  pod         Pod       @relation(fields: [podId], references: [id])
  podId       String
  players     User[]
  winner      User?     @relation("GameWinner", fields: [winnerId], references: [id])
  winnerId    String?
  gameLogs    GameLog[]
}

model GameLog {
  id        String   @id @default(cuid())
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  timestamp DateTime @default(now())
  event     String // e.g., "Player 1 took 5 damage", "Player 2 passed turn"
}
